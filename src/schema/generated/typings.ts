/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */


import { core } from "@nexus/schema"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  EntryInput: { // input type
    item?: string | null; // String
    occurred?: string | null; // String
    value?: string | null; // String
  }
  Filter: { // input type
    field: string; // String!
    values?: string[] | null; // [String!]
  }
  GoogleUser: { // input type
    email: string; // String!
    firstName: string; // String!
    googleId: string; // String!
    imageUrl: string; // String!
    lastName: string; // String!
  }
  RefreshTokens: { // input type
    refreshToken?: string | null; // String
    token?: string | null; // String
  }
  UserLogin: { // input type
    email: string; // String!
    password: string; // String!
  }
}

export interface NexusGenEnums {
  Role: "admin" | "user"
}

export interface NexusGenRootTypes {
  Entry: { // root type
    createdAt: any; // DateTime!
    id: string; // String!
    item: string; // String!
    occurred: any; // DateTime!
    updatedAt: any; // DateTime!
    userId: number; // Int!
    value: string; // String!
  }
  Mutation: {};
  Query: {};
  User: { // root type
    createdAt: any; // DateTime!
    email: string; // String!
    firstName: string; // String!
    id: string; // String!
    lastName: string; // String!
    role: NexusGenEnums['Role']; // Role!
    updatedAt: any; // DateTime!
  }
  UserLoginResponse: { // root type
    refreshToken: string; // String!
    token: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  EntryInput: NexusGenInputs['EntryInput'];
  Filter: NexusGenInputs['Filter'];
  GoogleUser: NexusGenInputs['GoogleUser'];
  RefreshTokens: NexusGenInputs['RefreshTokens'];
  UserLogin: NexusGenInputs['UserLogin'];
  Role: NexusGenEnums['Role'];
}

export interface NexusGenFieldTypes {
  Entry: { // field return type
    createdAt: any; // DateTime!
    id: string; // String!
    item: string; // String!
    occurred: any; // DateTime!
    updatedAt: any; // DateTime!
    userId: number; // Int!
    value: string; // String!
  }
  Mutation: { // field return type
    createEntry: NexusGenRootTypes['Entry']; // Entry!
    googleLogin: NexusGenRootTypes['UserLoginResponse']; // UserLoginResponse!
    refreshTokens: NexusGenRootTypes['UserLoginResponse']; // UserLoginResponse!
    userCreate: NexusGenRootTypes['UserLoginResponse']; // UserLoginResponse!
    userLogin: NexusGenRootTypes['UserLoginResponse']; // UserLoginResponse!
  }
  Query: { // field return type
    entries: NexusGenRootTypes['Entry'][]; // [Entry!]!
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  User: { // field return type
    createdAt: any; // DateTime!
    email: string; // String!
    firstName: string; // String!
    id: string; // String!
    lastName: string; // String!
    role: NexusGenEnums['Role']; // Role!
    updatedAt: any; // DateTime!
  }
  UserLoginResponse: { // field return type
    refreshToken: string; // String!
    token: string; // String!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createEntry: { // args
      entry: NexusGenInputs['EntryInput']; // EntryInput!
    }
    googleLogin: { // args
      token: string; // String!
    }
    refreshTokens: { // args
      refreshToken: string; // String!
      token: string; // String!
    }
    userCreate: { // args
      user: NexusGenInputs['UserLogin']; // UserLogin!
    }
    userLogin: { // args
      user: NexusGenInputs['UserLogin']; // UserLogin!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Entry" | "Mutation" | "Query" | "User" | "UserLoginResponse";

export type NexusGenInputNames = "EntryInput" | "Filter" | "GoogleUser" | "RefreshTokens" | "UserLogin";

export type NexusGenEnumNames = "Role";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}